{"ast":null,"code":"var _jsxFileName = \"/Users/divbhasin/rails-app/fitness/app/javascript/components/Food.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Col, Form, Modal, Spinner } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport DatePicker from 'react-datepicker';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './Food.css';\n\nvar NoDataIndication = function NoDataIndication() {\n  return React.createElement(\"div\", {\n    className: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\")));\n};\n\nvar SearchBar = Search.SearchBar;\n\nvar Food =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Food, _Component);\n\n  function Food(props) {\n    var _this;\n\n    _classCallCheck(this, Food);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Food).call(this, props));\n\n    _this.getFoods = function () {\n      axios.get('/api/foods', {\n        withCredentials: true\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          isLoading: false,\n          data: data.foods\n        });\n      })[\"catch\"](function (error) {\n        return console.log('api errors:', error);\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        date: date\n      });\n    };\n\n    _this.handleModalClose = function () {\n      _this.setState({\n        showModal: false,\n        selectedFood: {}\n      });\n    };\n\n    _this.onRowClick = function (e, food, rowIndex) {\n      _this.setState({\n        showModal: true,\n        selectedFood: food\n      });\n    };\n\n    _this.state = {\n      isLoading: true,\n      showModal: false,\n      date: new Date(),\n      grams: 100,\n      selectedFood: {},\n      columns: [{\n        dataField: 'id',\n        text: 'ID',\n        hidden: 'true'\n      }, {\n        dataField: 'food_group_id',\n        text: 'Food group',\n        hidden: 'true'\n      }, {\n        dataField: 'name',\n        text: 'Name',\n        headerStyle: function headerStyle() {\n          return {\n            width: '480px'\n          };\n        }\n      }, {\n        dataField: 'calories',\n        text: 'Calories'\n      }, {\n        dataField: 'carbs',\n        text: 'Carbs'\n      }, {\n        dataField: 'protein',\n        text: 'Protein'\n      }, {\n        dataField: 'fat',\n        text: 'Fat'\n      }, {\n        dataField: 'fibre',\n        text: 'Fibre'\n      }],\n      data: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Food, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getFoods();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event) {\n      event.preventDefault();\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n\n      if (name == 'grams' && !value) {\n        this.setState(_defineProperty({}, name, 100));\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.handleModalClose();\n      console.log('date: ' + this.state.date);\n      console.log('grams: ' + this.state.grams);\n      console.log('user: ' + this.props.user); // Make API request\n\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          columns = _this$state.columns,\n          data = _this$state.data,\n          date = _this$state.date,\n          grams = _this$state.grams,\n          selectedFood = _this$state.selectedFood,\n          showModal = _this$state.showModal;\n      var _this$props = this.props,\n          checkedLogin = _this$props.checkedLogin,\n          isLoggedIn = _this$props.isLoggedIn,\n          user = _this$props.user;\n      var multFactor = grams / 100.0;\n\n      if (checkedLogin && !isLoggedIn) {\n        return null;\n      } else if (!isLoggedIn) {\n        this.props.history.push('/login');\n      }\n\n      var _noDataIndication = isLoading ? React.createElement(NoDataIndication, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }) : null;\n\n      return React.createElement(\"div\", {\n        className: \"container secondary-color\",\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(ToolkitProvider, {\n        bootstrap4: true,\n        keyField: \"id\",\n        data: data,\n        columns: columns,\n        search: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(SearchBar, Object.assign({\n          className: \"search-bar\",\n          placeholder: \"Search food\"\n        }, props.searchProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), React.createElement(BootstrapTable, Object.assign({\n          bootstrap4: true,\n          hover: true,\n          striped: true,\n          noDataIndication: function noDataIndication() {\n            return _noDataIndication;\n          },\n          pagination: paginationFactory(),\n          rowEvents: {\n            onClick: _this2.onRowClick\n          }\n        }, props.baseProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })));\n      }), React.createElement(Modal, {\n        show: showModal,\n        onHide: this.handleModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Add Food\")), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Name:\"), \" \", selectedFood.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Calories:\"), \" \", (selectedFood.calories * multFactor).toFixed(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Carbs:\"), \" \", (selectedFood.carbs * multFactor).toFixed(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Protein:\"), \" \", (selectedFood.protein * multFactor).toFixed(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Fat:\"), \" \", (selectedFood.fat * multFactor).toFixed(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Fibre:\"), \" \", (selectedFood.fibre * multFactor).toFixed(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Date consumed\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        className: \"form-control\",\n        selected: date,\n        onChange: function onChange(date) {\n          return _this2.handleDateChange(date);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Amount consumed (g)\"), React.createElement(Form.Control, {\n        name: \"grams\",\n        type: \"number\",\n        value: grams,\n        min: \"1\",\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Add Food\")))));\n    }\n  }]);\n\n  return Food;\n}(Component);\n\nexport default Food;","map":{"version":3,"sources":["/Users/divbhasin/rails-app/fitness/app/javascript/components/Food.jsx"],"names":["React","Component","axios","Button","Col","Form","Modal","Spinner","BootstrapTable","paginationFactory","ToolkitProvider","Search","DatePicker","NoDataIndication","SearchBar","Food","props","getFoods","get","withCredentials","then","data","setState","isLoading","foods","error","console","log","handleDateChange","date","handleModalClose","showModal","selectedFood","onRowClick","e","food","rowIndex","state","Date","grams","columns","dataField","text","hidden","headerStyle","width","handleChange","bind","handleSubmit","handleBlur","event","preventDefault","target","name","value","user","history","push","checkedLogin","isLoggedIn","multFactor","noDataIndication","marginTop","searchProps","onClick","baseProps","calories","toFixed","carbs","protein","fat","fibre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Col, Form, Modal, Spinner } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport DatePicker from 'react-datepicker';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './Food.css';\n\nconst NoDataIndication = () => (\n  <div className=\"spinner\">\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nconst { SearchBar } = Search;\n\nclass Food extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      showModal: false,\n      date: new Date(),\n      grams: 100,\n      selectedFood: {},\n      columns: [{\n        dataField: 'id',\n        text: 'ID',\n        hidden: 'true'\n      },\n      {\n        dataField: 'food_group_id',\n        text: 'Food group',\n        hidden: 'true'\n      },\n      {\n        dataField: 'name',\n        text: 'Name',\n        headerStyle: () => {\n          return { width: '480px' };\n        }\n      },\n      {\n        dataField: 'calories',\n        text: 'Calories'\n      },\n      {\n        dataField: 'carbs',\n        text: 'Carbs'\n      },\n      {\n        dataField: 'protein',\n        text: 'Protein'\n      },\n      {\n        dataField: 'fat',\n        text: 'Fat'\n      },\n      {\n        dataField: 'fibre',\n        text: 'Fibre'\n      }],\n      data: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  componentWillMount() {\n    this.getFoods();\n  }\n\n  getFoods = () => {\n    axios.get('/api/foods', { withCredentials: true })\n      .then(({ data }) => {\n        this.setState({\n          isLoading: false,\n          data: data.foods\n        });\n      })\n      .catch(error => console.log('api errors:', error))\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleBlur(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    if (name == 'grams' && !value) {\n      this.setState({ [name]: 100 });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.handleModalClose();\n    console.log('date: ' + this.state.date);\n    console.log('grams: ' + this.state.grams);\n    console.log('user: ' + this.props.user);\n    // Make API request\n    this.props.history.push('/');\n  }\n\n  handleDateChange = (date) => {\n    this.setState({\n      date: date\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      showModal: false,\n      selectedFood: {}\n    });\n  }\n\n  onRowClick = (e, food, rowIndex) => {\n    this.setState({\n      showModal: true,\n      selectedFood: food\n    });\n  }\n\n  render() {\n    const { isLoading, columns, data, date, grams, selectedFood, showModal } = this.state;\n    const { checkedLogin, isLoggedIn, user } = this.props;\n    const multFactor = grams / 100.0;\n\n    if (checkedLogin && !isLoggedIn) {\n      return null;\n    } else if (!isLoggedIn) {\n      this.props.history.push('/login');\n    }\n\n    const noDataIndication = isLoading ? <NoDataIndication /> : null;\n  \n    return (\n      <div className=\"container secondary-color\" style={{ marginTop: 50 }}>\n        <ToolkitProvider bootstrap4 keyField='id' data={data} columns={columns} search>\n          {\n            props => (\n              <div>\n                <SearchBar\n                  className=\"search-bar\"\n                  placeholder=\"Search food\"\n                  {...props.searchProps}\n                />\n                <hr />\n                <BootstrapTable\n                  bootstrap4\n                  hover\n                  striped\n                  noDataIndication={() => noDataIndication}\n                  pagination={paginationFactory()}\n                  rowEvents={{onClick: this.onRowClick}}\n                  {...props.baseProps}\n                />\n              </div>\n            )\n          }\n        </ToolkitProvider>\n        <Modal show={showModal} onHide={this.handleModalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Food</Modal.Title>\n          </Modal.Header>\n          <Form onSubmit={this.handleSubmit}>\n            <Modal.Body>\n              <p>\n                <b>Name:</b> {selectedFood.name}<br />\n                <b>Calories:</b> {(selectedFood.calories * multFactor).toFixed(1)}<br />\n                <b>Carbs:</b> {(selectedFood.carbs * multFactor).toFixed(1)}<br />\n                <b>Protein:</b> {(selectedFood.protein * multFactor).toFixed(1)}<br />\n                <b>Fat:</b> {(selectedFood.fat * multFactor).toFixed(1)}<br />\n                <b>Fibre:</b> {(selectedFood.fibre * multFactor).toFixed(1)}<br />\n              </p>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formDate\">\n                  <Form.Label>Date consumed</Form.Label>\n                  <div className=\"input-group\">\n                    <DatePicker\n                      style={{ width: '100%' }}\n                      className=\"form-control\"\n                      selected={date}\n                      onChange={date => this.handleDateChange(date)} />\n                  </div>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formAmount\">\n                  <Form.Label>Amount consumed (g)</Form.Label>\n                  <Form.Control \n                    name=\"grams\"\n                    type=\"number\"\n                    value={grams}\n                    min=\"1\"\n                    onChange={this.handleChange}\n                    onBlur={this.handleBlur} />\n                </Form.Group>\n              </Form.Row>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleModalClose}>Cancel</Button>\n              <Button variant=\"primary\" type='submit'>Add Food</Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}