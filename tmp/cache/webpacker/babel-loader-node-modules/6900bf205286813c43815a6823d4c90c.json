{"ast":null,"code":"var _jsxFileName = \"/Users/divbhasin/rails-app/fitness/app/javascript/components/signup/Credentials.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nvar Credentials =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Credentials, _React$Component);\n\n  function Credentials(props) {\n    var _this;\n\n    _classCallCheck(this, Credentials);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Credentials).call(this, props));\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      if (_this.props.validateForm(_this.state.errors)) {\n        _this.setState({\n          errors: {}\n        });\n\n        _this.props.nextStep();\n      }\n    };\n\n    _this.state = {\n      errors: {}\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Credentials, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.props.handleChange(event);\n      var errors = this.state.errors;\n\n      switch (name) {\n        case 'first_name':\n          if (value.length == 0) {\n            errors.first_name = 'First name cannot be blank!';\n          } else {\n            delete errors.first_name;\n          }\n\n          break;\n\n        case 'last_name':\n          if (value.length == 0) {\n            errors.last_name = 'Last name cannot be blank!';\n          } else {\n            delete errors.last_name;\n          }\n\n          break;\n\n        case 'email':\n          if (!validEmailRegex.test(value)) {\n            errors.email = 'Email is not valid!';\n          } else {\n            delete errors.email;\n          }\n\n          break;\n\n        case 'password':\n          if (value.length < 8) {\n            errors.password = 'Password must be at least 8 characters long!';\n          } else {\n            delete errors.password;\n          }\n\n          break;\n\n        case 'confirm_password':\n          if (value != this.props.values['password']) {\n            errors.confirm_password = 'Passwords must match!';\n          } else {\n            delete errors.confirm_password;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var errors = this.state.errors;\n      var isButtonEnabled = Object.keys(errors).length == 0 && values.first_name.length > 0 && values.last_name.length > 0 && values.email.length > 0 && values.password.length > 0 && values.confirm_password.length > 0;\n      var alert;\n\n      if (Object.keys(errors).length > 0) {\n        alert = React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, Object.keys(errors).map(function (key, index) {\n          return React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, key, \": \", errors[key]);\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, alert, React.createElement(FormGroup, {\n        controlId: \"first_name\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(FormControl, {\n        autoFocus: true,\n        name: \"first_name\",\n        type: \"name\",\n        defaultValue: values.first_name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"last_name\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(FormControl, {\n        name: \"last_name\",\n        type: \"name\",\n        defaultValue: values.last_name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"email\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        name: \"email\",\n        type: \"email\",\n        defaultValue: values.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        name: \"password\",\n        type: \"password\",\n        defaultValue: values.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"confirm_password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(FormControl, {\n        name: \"confirm_password\",\n        type: \"password\",\n        defaultValue: values.confirm_password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(Button, {\n        block: true,\n        disabled: !isButtonEnabled,\n        onClick: this.saveAndContinue,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Continue\")));\n    }\n  }]);\n\n  return Credentials;\n}(React.Component);\n\nexport default Credentials;","map":{"version":3,"sources":["/Users/divbhasin/rails-app/fitness/app/javascript/components/signup/Credentials.jsx"],"names":["React","Button","FormGroup","FormControl","FormLabel","validEmailRegex","RegExp","Credentials","props","saveAndContinue","e","preventDefault","validateForm","state","errors","setState","nextStep","handleChange","bind","event","target","name","value","length","first_name","last_name","test","email","password","values","confirm_password","isButtonEnabled","Object","keys","alert","map","key","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nclass Credentials extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  saveAndContinue = (e) => {\n    e.preventDefault()\n    if (this.props.validateForm(this.state.errors)) {\n      this.setState({\n        errors: {}\n      })\n      this.props.nextStep()\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.props.handleChange(event);\n    let errors = this.state.errors;\n    \n    switch (name) {\n      case 'first_name':\n        if (value.length == 0) {\n          errors.first_name = 'First name cannot be blank!';\n        } else {\n          delete errors.first_name;\n        }\n        break;\n      case 'last_name':\n        if (value.length == 0) {\n          errors.last_name = 'Last name cannot be blank!';\n        } else {\n          delete errors.last_name;\n        }\n        break;\n      case 'email':\n        if (!validEmailRegex.test(value)) {\n          errors.email = 'Email is not valid!';\n        } else {\n          delete errors.email;\n        }\n        break;\n      case 'password':\n        if (value.length < 8) {\n          errors.password = 'Password must be at least 8 characters long!';\n        } else {\n          delete errors.password;\n        }\n        break;\n      case 'confirm_password':\n        if (value != this.props.values['password']) {\n          errors.confirm_password = 'Passwords must match!';\n        } else {\n          delete errors.confirm_password;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { errors } = this.state;\n    const isButtonEnabled = Object.keys(errors).length == 0 && \n                            values.first_name.length > 0 &&\n                            values.last_name.length > 0 &&\n                            values.email.length > 0 &&\n                            values.password.length > 0 &&\n                            values.confirm_password.length > 0;\n    let alert;\n\n    if (Object.keys(errors).length > 0) {\n      alert =\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {Object.keys(errors).map((key, index) => (\n            <p key={index}>{key}: {errors[key]}</p>\n          ))}\n        </div>;\n    }\n\n    return (\n      <div className=\"signup\">\n        <h1>Sign Up</h1>\n\n        <form>\n          {alert}\n          <FormGroup controlId=\"first_name\" bsSize=\"large\">\n            <FormLabel>First Name</FormLabel>\n            <FormControl\n              autoFocus\n              name=\"first_name\"\n              type=\"name\"\n              defaultValue={values.first_name}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"last_name\" bsSize=\"large\">\n            <FormLabel>Last Name</FormLabel>\n            <FormControl\n              name=\"last_name\"\n              type=\"name\"\n              defaultValue={values.last_name}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <FormLabel>Email</FormLabel>\n            <FormControl\n              name=\"email\"\n              type=\"email\"\n              defaultValue={values.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <FormLabel>Password</FormLabel>\n            <FormControl\n              name=\"password\"\n              type=\"password\"\n              defaultValue={values.password}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"confirm_password\" bsSize=\"large\">\n            <FormLabel>Confirm Password</FormLabel>\n            <FormControl\n              name=\"confirm_password\"\n              type=\"password\"\n              defaultValue={values.confirm_password}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <Button\n            block\n            disabled={!isButtonEnabled}\n            onClick={this.saveAndContinue}\n            bsSize=\"large\">Continue</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Credentials\n"]},"metadata":{},"sourceType":"module"}