{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport ArrowLeftOutlined from '@ant-design/icons/ArrowLeftOutlined';\nimport ArrowRightOutlined from '@ant-design/icons/ArrowRightOutlined';\nimport { ConfigConsumer } from '../config-provider';\nimport Breadcrumb from '../breadcrumb';\nimport Avatar from '../avatar';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar renderBack = function renderBack(prefixCls, backIcon, onBack) {\n  if (!backIcon || !onBack) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(LocaleReceiver, {\n      componentName: \"PageHeader\"\n    }, function (_ref) {\n      var back = _ref.back;\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-back\")\n        },\n        /*#__PURE__*/\n        React.createElement(TransButton, {\n          onClick: function onClick(e) {\n            if (onBack) {\n              onBack(e);\n            }\n          },\n          className: \"\".concat(prefixCls, \"-back-button\"),\n          \"aria-label\": back\n        }, backIcon))\n      );\n    })\n  );\n};\n\nvar renderBreadcrumb = function renderBreadcrumb(breadcrumb) {\n  return (\n    /*#__PURE__*/\n    React.createElement(Breadcrumb, breadcrumb)\n  );\n};\n\nvar getBackIcon = function getBackIcon(props) {\n  var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ltr';\n\n  if (props.backIcon !== undefined) {\n    return props.backIcon;\n  }\n\n  return direction === 'rtl' ?\n  /*#__PURE__*/\n  React.createElement(ArrowRightOutlined, null) :\n  /*#__PURE__*/\n  React.createElement(ArrowLeftOutlined, null);\n};\n\nvar renderTitle = function renderTitle(prefixCls, props) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ltr';\n  var title = props.title,\n      avatar = props.avatar,\n      subTitle = props.subTitle,\n      tags = props.tags,\n      extra = props.extra,\n      onBack = props.onBack;\n  var headingPrefixCls = \"\".concat(prefixCls, \"-heading\");\n\n  if (title || subTitle || tags || extra) {\n    var backIcon = getBackIcon(props, direction);\n    var backIconDom = renderBack(prefixCls, backIcon, onBack);\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: headingPrefixCls\n      }, backIconDom, avatar &&\n      /*#__PURE__*/\n      React.createElement(Avatar, avatar), title &&\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(headingPrefixCls, \"-title\")\n      }, title), subTitle &&\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(headingPrefixCls, \"-sub-title\")\n      }, subTitle), tags &&\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(headingPrefixCls, \"-tags\")\n      }, tags), extra &&\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(headingPrefixCls, \"-extra\")\n      }, extra))\n    );\n  }\n\n  return null;\n};\n\nvar renderFooter = function renderFooter(prefixCls, footer) {\n  if (footer) {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-footer\")\n      }, footer)\n    );\n  }\n\n  return null;\n};\n\nvar renderChildren = function renderChildren(prefixCls, children) {\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children)\n  );\n};\n\nvar PageHeader = function PageHeader(props) {\n  return (\n    /*#__PURE__*/\n    React.createElement(ConfigConsumer, null, function (_ref2) {\n      var _classnames;\n\n      var getPrefixCls = _ref2.getPrefixCls,\n          pageHeader = _ref2.pageHeader,\n          direction = _ref2.direction;\n      var customizePrefixCls = props.prefixCls,\n          style = props.style,\n          footer = props.footer,\n          children = props.children,\n          breadcrumb = props.breadcrumb,\n          customizeClassName = props.className;\n      var ghost = true; // Use `ghost` from `props` or from `ConfigProvider` instead.\n\n      if ('ghost' in props) {\n        ghost = props.ghost;\n      } else if (pageHeader && 'ghost' in pageHeader) {\n        ghost = pageHeader.ghost;\n      }\n\n      var prefixCls = getPrefixCls('page-header', customizePrefixCls);\n      var breadcrumbDom = breadcrumb && breadcrumb.routes ? renderBreadcrumb(breadcrumb) : null;\n      var className = classnames(prefixCls, customizeClassName, (_classnames = {\n        'has-breadcrumb': breadcrumbDom,\n        'has-footer': footer\n      }, _defineProperty(_classnames, \"\".concat(prefixCls, \"-ghost\"), ghost), _defineProperty(_classnames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classnames));\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: className,\n          style: style\n        }, breadcrumbDom, renderTitle(prefixCls, props, direction), children && renderChildren(prefixCls, children), renderFooter(prefixCls, footer))\n      );\n    })\n  );\n};\n\nexport default PageHeader;","map":null,"metadata":{},"sourceType":"module"}