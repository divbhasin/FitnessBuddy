{"ast":null,"code":"var _jsxFileName = \"/Users/divbhasin/rails-app/fitness/app/javascript/components/Dashboard.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport { ProgressBar, Card, Alert, Button, Col, Form, Modal, Spinner } from 'react-bootstrap';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nvar quotes = [\"The last three or four reps is what makes the muscle grow. This area of pain divides a champion from someone who is not a champion.\", \"Success usually comes to those who are too busy to be looking for it.\", \"All progress takes place outside the comfort zone.\", \"If you think lifting is dangerous, try being weak. Being weak is dangerous.\", \"The only place where success comes before work is in the dictionary.\", \"The clock is ticking. Are you becoming the person you want to be?\", \"Whether you think you can, or you think you can't, you’re right.\", \"The successful warrior is the average man, with laser-like focus.\", \"You must expect great things of yourself before you can do them.\", \"Action is the foundational key to all success.\", \"Things may come to those who wait, but only the things left by those who hustle.\", \"Well done is better than well said.\", \"All our dreams can come true if we have the courage to pursue them.\", \"A champion is someone who gets up when they can't.\", \"What hurts today makes you stronger tomorrow.\", \"If something stands between you and your success, move it. Never be denied.\", \"If you want something you’ve never had, you must be willing to do something you’ve never done.\", \"You have to think it before you can do it. The mind is what makes it all possible.\", \"Things work out best for those who make the best of how things work out.\", \"Success is walking from failure to failure with no loss of enthusiasm.\"];\n\nvar NoDataIndication = function NoDataIndication() {\n  return React.createElement(\"div\", {\n    className: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Loading...\")));\n};\n\nvar activity_factors = {\n  0: 1.2,\n  1: 1.375,\n  2: 1.55,\n  3: 1.725,\n  4: 1.9\n};\nvar multiplier = {\n  0: -0.2,\n  1: -0.1,\n  2: 0,\n  3: 0.1,\n  4: 0.2\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.getHistory = function () {\n      axios.get('/api/daily_analytics').then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          isLoading: false,\n          history: data.daily_history,\n          caloric_progress: parseInt(100 * data.progress[0].caloric_progress),\n          tdee: Math.round(data.tdee),\n          calories: parseInt(data.progress[0].calories),\n          protein: parseInt(data.progress[0].protein),\n          fats: parseInt(data.progress[0].fats),\n          carbs: parseInt(data.progress[0].carbs),\n          protein_progress: parseInt(100 * data.progress[0].protein_progress),\n          carbs_progress: parseInt(100 * data.progress[0].carbs_progress),\n          fats_progress: parseInt(100 * data.progress[0].fats_progress),\n          protein_goal: Math.round(data.protein_goal),\n          fats_goal: Math.round(data.fats_goal),\n          carbs_goal: Math.round(data.carbs_goal)\n        });\n      })[\"catch\"](function (error) {\n        return console.log('api errors:', error);\n      });\n    };\n\n    _this.state = {\n      columns: [{\n        dataField: 'food_id',\n        hidden: 'true',\n        text: 'ID'\n      }, {\n        dataField: 'name',\n        text: 'Name',\n        sort: true\n      }, {\n        dataField: 'servings',\n        text: 'Amount (in g)',\n        sort: true\n      }, {\n        dataField: 'calories',\n        text: 'Calories',\n        sort: true\n      }, {\n        dataField: 'protein',\n        text: 'Protein (in g)',\n        sort: true\n      }, {\n        dataField: 'fat',\n        text: 'Fat (in g)',\n        sort: true\n      }, {\n        dataField: 'carbs',\n        text: 'Carbs (in g)',\n        sort: true\n      }],\n      history: [],\n      isLoading: true,\n      caloric_progress: 0,\n      tdee: 0,\n      calories: 0,\n      carbs: 0,\n      fats: 0,\n      protein: 0,\n      protein_progress: 0,\n      fats_progress: 0,\n      carbs_progress: 0,\n      protein_goal: 0,\n      fats_goal: 0,\n      carbs_goal: 0\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getHistory();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          checkedLogin = _this$props.checkedLogin,\n          isLoggedIn = _this$props.isLoggedIn,\n          user = _this$props.user;\n\n      if (!checkedLogin) {\n        return null;\n      }\n\n      var pb_c = React.createElement(ProgressBar, {\n        now: this.state.caloric_progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n      var pb_p = React.createElement(ProgressBar, {\n        now: this.state.protein_progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n      var pb_ca = React.createElement(ProgressBar, {\n        now: this.state.carbs_progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n      var pb_f = React.createElement(ProgressBar, {\n        now: this.state.fats_progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n\n      if (this.state.caloric_progress >= 100) {\n        pb_c = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.caloric_progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.protein_progress >= 100) {\n        pb_p = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.protein_progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.carbs_progress >= 100) {\n        pb_ca = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.carbs_progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.fats_progress >= 100) {\n        pb_f = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.fats_progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n      }\n\n      var _noDataIndication = isLoading ? React.createElement(NoDataIndication, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }) : null;\n\n      return React.createElement(\"div\", {\n        className: \"jumbotron jumbotron-fluid bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container secondary-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Welcome back, \", user.first_name, \"!\"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Get started by \", React.createElement(\"a\", {\n        href: \"/pick_food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \" adding your meals \"), \" for the day!\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Today's Meals \\uD83C\\uDF5E \\uD83C\\uDF47\"), this.state.history.length > 0 && React.createElement(BootstrapTable, {\n        bootstrap4: true,\n        hover: true,\n        striped: true,\n        noDataIndication: function noDataIndication() {\n          return _noDataIndication;\n        },\n        pagination: paginationFactory(),\n        keyField: \"food_id\",\n        data: this.state.history,\n        columns: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/pick_food\",\n        className: \"btn btn-lg custom-button mr-2\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Add Food\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Meeting Your Goals \\uD83D\\uDCAA\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" Daily dose of motivation: \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" \", quotes[Math.floor(Math.random() * quotes.length)], \" \"), \" \"), React.createElement(Card, {\n        style: {\n          'marginTop': '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Progress\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Calories: \", this.state.calories || 0, \" / \", this.state.tdee, \" cal\"), React.createElement(ProgressBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, pb_c), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Protein: \", this.state.protein, \" / \", this.state.protein_goal, \" g\"), React.createElement(ProgressBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, pb_p), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Carbs: \", this.state.carbs, \" / \", this.state.carbs_goal, \" g\"), React.createElement(ProgressBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, pb_ca), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Fat: \", this.state.fats, \" / \", this.state.fats_goal, \" g\"), React.createElement(ProgressBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, pb_f)))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/divbhasin/rails-app/fitness/app/javascript/components/Dashboard.jsx"],"names":["React","Component","Link","BootstrapTable","axios","ProgressBar","Card","Alert","Button","Col","Form","Modal","Spinner","paginationFactory","quotes","NoDataIndication","activity_factors","multiplier","Dashboard","props","getHistory","get","then","data","setState","isLoading","history","daily_history","caloric_progress","parseInt","progress","tdee","Math","round","calories","protein","fats","carbs","protein_progress","carbs_progress","fats_progress","protein_goal","fats_goal","carbs_goal","error","console","log","state","columns","dataField","hidden","text","sort","checkedLogin","isLoggedIn","user","pb_c","pb_p","pb_ca","pb_f","noDataIndication","first_name","length","floor","random"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,MAAnC,EAA2CC,GAA3C,EAAgDC,IAAhD,EAAsDC,KAAtD,EAA6DC,OAA7D,QAA4E,iBAA5E;AACA,OAAO,gEAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,IAAMC,MAAM,GAAG,CACb,qIADa,EAEb,uEAFa,EAGb,oDAHa,EAIb,6EAJa,EAKb,sEALa,EAMb,mEANa,EAOb,kEAPa,EAQb,mEARa,EASb,kEATa,EAUb,gDAVa,EAWb,kFAXa,EAYb,qCAZa,EAab,qEAba,EAcb,oDAda,EAeb,+CAfa,EAgBb,6EAhBa,EAiBb,gGAjBa,EAkBb,oFAlBa,EAmBb,0EAnBa,EAoBb,wEApBa,CAAf;;AAuBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADuB;AAAA,CAAzB;;AAQA,IAAMC,gBAAgB,GAAG;AACrB,KAAG,GADkB;AAErB,KAAG,KAFkB;AAGrB,KAAG,IAHkB;AAIrB,KAAG,KAJkB;AAKrB,KAAG;AALkB,CAAzB;AAQA,IAAMC,UAAU,GAAG;AACf,KAAG,CAAC,GADW;AAEf,KAAG,CAAC,GAFW;AAGf,KAAG,CAHY;AAIf,KAAG,GAJY;AAKf,KAAG;AALY,CAAnB;;IAQMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAkDnBC,UAlDmB,GAkDN,YAAM;AACjBhB,MAAAA,KAAK,CAACiB,GAAN,CAAU,sBAAV,EACGC,IADH,CACQ,gBAAc;AAAA,YAAXC,IAAW,QAAXA,IAAW;;AAClB,cAAKC,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAEH,IAAI,CAACI,aAFF;AAGZC,UAAAA,gBAAgB,EAAEC,QAAQ,CAAC,MAAMN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBF,gBAAxB,CAHd;AAIZG,UAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACQ,IAAhB,CAJM;AAKZG,UAAAA,QAAQ,EAAEL,QAAQ,CAACN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBI,QAAlB,CALN;AAMZC,UAAAA,OAAO,EAAEN,QAAQ,CAACN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBK,OAAlB,CANL;AAOZC,UAAAA,IAAI,EAAEP,QAAQ,CAACN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBM,IAAlB,CAPF;AAQZC,UAAAA,KAAK,EAAER,QAAQ,CAACN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBO,KAAlB,CARH;AASZC,UAAAA,gBAAgB,EAAET,QAAQ,CAAC,MAAMN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBQ,gBAAxB,CATd;AAUZC,UAAAA,cAAc,EAAEV,QAAQ,CAAC,MAAMN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBS,cAAxB,CAVZ;AAWZC,UAAAA,aAAa,EAAEX,QAAQ,CAAC,MAAMN,IAAI,CAACO,QAAL,CAAc,CAAd,EAAiBU,aAAxB,CAXX;AAYZC,UAAAA,YAAY,EAAET,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACkB,YAAhB,CAZF;AAaZC,UAAAA,SAAS,EAAEV,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACmB,SAAhB,CAbC;AAcZC,UAAAA,UAAU,EAAEX,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACoB,UAAhB;AAdA,SAAd;AAgBD,OAlBH,WAmBS,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAAJ;AAAA,OAnBd;AAoBD,KAvEkB;;AAEjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EACP,CAAC;AACCC,QAAAA,SAAS,EAAE,SADZ;AAECC,QAAAA,MAAM,EAAE,MAFT;AAGCC,QAAAA,IAAI,EAAE;AAHP,OAAD,EAIG;AACDF,QAAAA,SAAS,EAAE,MADV;AAEDE,QAAAA,IAAI,EAAE,MAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OAJH,EAQG;AACDH,QAAAA,SAAS,EAAE,UADV;AAEDE,QAAAA,IAAI,EAAE,eAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OARH,EAYG;AACDH,QAAAA,SAAS,EAAE,UADV;AAEDE,QAAAA,IAAI,EAAE,UAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OAZH,EAgBG;AACDH,QAAAA,SAAS,EAAE,SADV;AAEDE,QAAAA,IAAI,EAAE,gBAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OAhBH,EAoBG;AACDH,QAAAA,SAAS,EAAE,KADV;AAEDE,QAAAA,IAAI,EAAE,YAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OApBH,EAwBG;AACDH,QAAAA,SAAS,EAAE,OADV;AAEDE,QAAAA,IAAI,EAAE,cAFL;AAGDC,QAAAA,IAAI,EAAE;AAHL,OAxBH,CAFW;AA+BX1B,MAAAA,OAAO,EAAE,EA/BE;AAgCXD,MAAAA,SAAS,EAAE,IAhCA;AAiCXG,MAAAA,gBAAgB,EAAE,CAjCP;AAkCXG,MAAAA,IAAI,EAAE,CAlCK;AAmCXG,MAAAA,QAAQ,EAAE,CAnCC;AAoCXG,MAAAA,KAAK,EAAE,CApCI;AAqCXD,MAAAA,IAAI,EAAE,CArCK;AAsCXD,MAAAA,OAAO,EAAE,CAtCE;AAuCXG,MAAAA,gBAAgB,EAAE,CAvCP;AAwCXE,MAAAA,aAAa,EAAE,CAxCJ;AAyCXD,MAAAA,cAAc,EAAE,CAzCL;AA0CXE,MAAAA,YAAY,EAAE,CA1CH;AA2CXC,MAAAA,SAAS,EAAE,CA3CA;AA4CXC,MAAAA,UAAU,EAAE;AA5CD,KAAb;AAFiB;AAgDlB;;;;wCAyBmB;AAClB,WAAKvB,UAAL;AACD;;;6BAEQ;AAAA,wBAC+C,KAAKD,KADpD;AAAA,UACCM,SADD,eACCA,SADD;AAAA,UACY4B,YADZ,eACYA,YADZ;AAAA,UAC0BC,UAD1B,eAC0BA,UAD1B;AAAA,UACsCC,IADtC,eACsCA,IADtC;;AAEP,UAAI,CAACF,YAAL,EAAmB;AACjB,eAAO,IAAP;AACD;;AAED,UAAIG,IAAI,GAAG,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKT,KAAL,CAAWnB,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACA,UAAI6B,IAAI,GAAG,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWT,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACA,UAAIoB,KAAK,GAAG,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKX,KAAL,CAAWR,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACA,UAAIoB,IAAI,GAAG,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWP,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;;AAEA,UAAI,KAAKO,KAAL,CAAWnB,gBAAX,IAA+B,GAAnC,EAAwC;AACtC4B,QAAAA,IAAI,GAAG,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAC,SAArB;AAA+B,UAAA,GAAG,EAAE,KAAKT,KAAL,CAAWnB,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAI,KAAKmB,KAAL,CAAWT,gBAAX,IAA+B,GAAnC,EAAwC;AACtCmB,QAAAA,IAAI,GAAG,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAC,SAArB;AAA+B,UAAA,GAAG,EAAE,KAAKV,KAAL,CAAWT,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAI,KAAKS,KAAL,CAAWR,cAAX,IAA6B,GAAjC,EAAsC;AACpCmB,QAAAA,KAAK,GAAG,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAC,SAArB;AAA+B,UAAA,GAAG,EAAE,KAAKX,KAAL,CAAWR,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;AACD,UAAI,KAAKQ,KAAL,CAAWP,aAAX,IAA4B,GAAhC,EAAqC;AACnCmB,QAAAA,IAAI,GAAG,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAC,SAArB;AAA+B,UAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWP,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAMoB,iBAAgB,GAAGnC,SAAS,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA0B,IAA5D;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyC8B,IAAI,CAACM,UAA9C,MADF,EAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACiB;AAAG,QAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADjB,kBAFF,EAKE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDANF,EAOG,KAAKd,KAAL,CAAWrB,OAAX,CAAmBoC,MAAnB,GAA4B,CAA5B,IACD,oBAAC,cAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,gBAAgB,EAAE;AAAA,iBAAMF,iBAAN;AAAA,SAJpB;AAKE,QAAA,UAAU,EAAE/C,iBAAiB,EAL/B;AAME,QAAA,QAAQ,EAAC,SANX;AAMqB,QAAA,IAAI,EAAG,KAAKkC,KAAL,CAAWrB,OANvC;AAMiD,QAAA,OAAO,EAAG,KAAKqB,KAAL,CAAWC,OANtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAgBE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,+BAAhC;AAAgE,QAAA,IAAI,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,EAiBE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKlC,MAAM,CAACkB,IAAI,CAAC+B,KAAL,CAAW/B,IAAI,CAACgC,MAAL,KAAgBlD,MAAM,CAACgD,MAAlC,CAAD,CAAX,MAAjC,MApBF,EAqBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE,uBAAa;AAAf,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACa,KAAKf,KAAL,CAAWb,QAAX,IAAuB,CADpC,SAC0C,KAAKa,KAAL,CAAWhB,IADrD,SADF,EAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcyB,IAAd,CAJF,EAKE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY,KAAKT,KAAL,CAAWZ,OADvB,SACmC,KAAKY,KAAL,CAAWN,YAD9C,OANF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcgB,IAAd,CATF,EAUE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKV,KAAL,CAAWV,KADrB,SAC+B,KAAKU,KAAL,CAAWJ,UAD1C,OAXF,EAcE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAce,KAAd,CAdF,EAeE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAgBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,KAAKX,KAAL,CAAWX,IADnB,SAC4B,KAAKW,KAAL,CAAWL,SADvC,OAhBF,EAmBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAciB,IAAd,CAnBF,CAFF,CArBF,CADF,CADF;AAkDD;;;;EA1JqB1D,S;;AA6JxB,eAAeiB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport { ProgressBar, Card, Alert, Button, Col, Form, Modal, Spinner } from 'react-bootstrap';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nconst quotes = [\n  \"The last three or four reps is what makes the muscle grow. This area of pain divides a champion from someone who is not a champion.\",\n  \"Success usually comes to those who are too busy to be looking for it.\",\n  \"All progress takes place outside the comfort zone.\",\n  \"If you think lifting is dangerous, try being weak. Being weak is dangerous.\",\n  \"The only place where success comes before work is in the dictionary.\",\n  \"The clock is ticking. Are you becoming the person you want to be?\",\n  \"Whether you think you can, or you think you can't, you’re right.\",\n  \"The successful warrior is the average man, with laser-like focus.\",\n  \"You must expect great things of yourself before you can do them.\",\n  \"Action is the foundational key to all success.\",\n  \"Things may come to those who wait, but only the things left by those who hustle.\",\n  \"Well done is better than well said.\",\n  \"All our dreams can come true if we have the courage to pursue them.\",\n  \"A champion is someone who gets up when they can't.\",\n  \"What hurts today makes you stronger tomorrow.\",\n  \"If something stands between you and your success, move it. Never be denied.\",\n  \"If you want something you’ve never had, you must be willing to do something you’ve never done.\",\n  \"You have to think it before you can do it. The mind is what makes it all possible.\",\n  \"Things work out best for those who make the best of how things work out.\",\n  \"Success is walking from failure to failure with no loss of enthusiasm.\"\n]\n\nconst NoDataIndication = () => (\n  <div className=\"spinner\">\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nconst activity_factors = {\n    0: 1.2,\n    1: 1.375,\n    2: 1.55,\n    3: 1.725,\n    4: 1.9\n}\n\nconst multiplier = {\n    0: -0.2,\n    1: -0.1,\n    2: 0,\n    3: 0.1,\n    4: 0.2\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      columns: \n      [{\n        dataField: 'food_id',\n        hidden: 'true',\n        text: 'ID'\n      }, {\n        dataField: 'name',\n        text: 'Name',\n        sort: true\n      }, {\n        dataField: 'servings',\n        text: 'Amount (in g)',\n        sort: true\n      }, {\n        dataField: 'calories',\n        text: 'Calories',\n        sort: true\n      }, {\n        dataField: 'protein',\n        text: 'Protein (in g)',\n        sort: true\n      }, {\n        dataField: 'fat',\n        text: 'Fat (in g)',\n        sort: true\n      }, {\n        dataField: 'carbs',\n        text: 'Carbs (in g)',\n        sort: true\n      }],\n      history: [],\n      isLoading: true,\n      caloric_progress: 0,\n      tdee: 0,\n      calories: 0,\n      carbs: 0,\n      fats: 0,\n      protein: 0,\n      protein_progress: 0,\n      fats_progress: 0,\n      carbs_progress: 0,\n      protein_goal: 0,\n      fats_goal: 0,\n      carbs_goal: 0\n    }\n  }\n\n  getHistory = () => {\n    axios.get('/api/daily_analytics')\n      .then(({ data }) => {\n        this.setState({\n          isLoading: false,\n          history: data.daily_history,\n          caloric_progress: parseInt(100 * data.progress[0].caloric_progress),\n          tdee: Math.round(data.tdee),\n          calories: parseInt(data.progress[0].calories),\n          protein: parseInt(data.progress[0].protein),\n          fats: parseInt(data.progress[0].fats),\n          carbs: parseInt(data.progress[0].carbs),\n          protein_progress: parseInt(100 * data.progress[0].protein_progress),\n          carbs_progress: parseInt(100 * data.progress[0].carbs_progress),\n          fats_progress: parseInt(100 * data.progress[0].fats_progress),\n          protein_goal: Math.round(data.protein_goal),\n          fats_goal: Math.round(data.fats_goal),\n          carbs_goal: Math.round(data.carbs_goal)\n        });\n      })\n      .catch(error => console.log('api errors:', error))\n  }\n\n  componentDidMount() {\n    this.getHistory()\n  }\n\n  render() {\n    const { isLoading, checkedLogin, isLoggedIn, user } = this.props;\n    if (!checkedLogin) {\n      return null;\n    }\n\n    var pb_c = <ProgressBar now={this.state.caloric_progress} />\n    var pb_p = <ProgressBar now={this.state.protein_progress} />\n    var pb_ca = <ProgressBar now={this.state.carbs_progress} />\n    var pb_f = <ProgressBar now={this.state.fats_progress} />\n\n    if (this.state.caloric_progress >= 100) {\n      pb_c = <ProgressBar variant=\"success\" now={this.state.caloric_progress} />\n    }\n    if (this.state.protein_progress >= 100) {\n      pb_p = <ProgressBar variant=\"success\" now={this.state.protein_progress} />\n    }\n    if (this.state.carbs_progress >= 100) {\n      pb_ca = <ProgressBar variant=\"success\" now={this.state.carbs_progress} />\n    }\n    if (this.state.fats_progress >= 100) {\n      pb_f = <ProgressBar variant=\"success\" now={this.state.fats_progress} />\n    }\n\n    const noDataIndication = isLoading ? <NoDataIndication /> : null;\n\n    return (\n      <div className=\"jumbotron jumbotron-fluid bg-transparent\">\n        <div className=\"container secondary-color\">\n          <h1 className=\"display-4\">Welcome back, {user.first_name}!</h1>\n          <p className=\"lead\">\n            Get started by <a href='/pick_food'> adding your meals </a> for the day!\n          </p>\n          <hr className=\"my-4\" />\n          <h2>Today's Meals 🍞 🍇</h2>\n          {this.state.history.length > 0 && (\n          <BootstrapTable \n            bootstrap4\n            hover\n            striped\n            noDataIndication={() => noDataIndication}\n            pagination={paginationFactory()}\n            keyField=\"food_id\" data={ this.state.history } columns={ this.state.columns } /> \n          )}\n          <Link to=\"/pick_food\" className=\"btn btn-lg custom-button mr-2\" role=\"button\">Add Food</Link>\n          <hr className=\"my-4\" />\n\n          <h2>Meeting Your Goals 💪</h2>\n          <span> Daily dose of motivation: <i> {quotes[Math.floor(Math.random() * quotes.length)]} </i> </span>\n          <Card style={{ 'marginTop': '10px' }}>\n            <Card.Header>Progress</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                Calories: {this.state.calories || 0} / {this.state.tdee} cal\n              </Card.Text>\n              <ProgressBar>{pb_c}</ProgressBar>\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Protein: {this.state.protein} / {this.state.protein_goal} g\n              </Card.Text>\n              <ProgressBar>{pb_p}</ProgressBar>\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Carbs: {this.state.carbs} / {this.state.carbs_goal} g\n              </Card.Text>\n              <ProgressBar>{pb_ca}</ProgressBar>\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Fat: {this.state.fats} / {this.state.fats_goal} g\n              </Card.Text>\n              <ProgressBar>{pb_f}</ProgressBar>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}