{"ast":null,"code":"var _jsxFileName = \"/Users/divbhasin/rails-app/fitness/app/javascript/components/Dashboard.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport { ProgressBar, Card } from 'react-bootstrap';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nvar activity_factors = {\n  0: 1.2,\n  1: 1.375,\n  2: 1.55,\n  3: 1.725,\n  4: 1.9\n};\nvar multiplier = {\n  0: -0.2,\n  1: -0.1,\n  2: 0,\n  3: 0.1,\n  4: 0.2\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.getHistory = function () {\n      axios.get('/api/daily_analytics').then(function (_ref) {\n        var data = _ref.data;\n        console.log(data);\n\n        _this.setState({\n          history: data.daily_history,\n          caloric_progress: parseInt(100 * data.progress[0].caloric_progress),\n          tdee: Math.round(data.tdee),\n          calories: parseInt(data.progress[0].calories),\n          protein: parseInt(data.progress[0].protein),\n          fats: parseInt(data.progress[0].fats),\n          carbs: parseInt(data.progress[0].carbs),\n          protein_progress: parseInt(100 * data.progress[0].protein_progress),\n          carbs_progress: parseInt(100 * data.progress[0].carbs_progress),\n          fats_progress: parseInt(100 * data.progress[0].fats_progress),\n          protein_goal: Math.round(data.protein_goal),\n          fats_goal: Math.round(data.fats_goal),\n          carbs_goal: Math.round(data.carbs_goal)\n        });\n      })[\"catch\"](function (error) {\n        return console.log('api errors:', error);\n      });\n    };\n\n    _this.state = {\n      columns: [{\n        dataField: 'food_id',\n        hidden: 'true',\n        text: 'ID'\n      }, {\n        dataField: 'name',\n        text: 'Name'\n      }, {\n        dataField: 'servings',\n        text: 'Amount (in g)'\n      }, {\n        dataField: 'calories',\n        text: 'Calories'\n      }, {\n        dataField: 'protein',\n        text: 'Protein (in g)'\n      }, {\n        dataField: 'fats',\n        text: 'Fat (in g)'\n      }, {\n        dataField: 'carbs',\n        text: 'Carbs (in g)'\n      }],\n      history: [],\n      isLoading: true,\n      caloric_progress: 0,\n      tdee: 0,\n      calories: 0,\n      carbs: 0,\n      fats: 0,\n      protein: 0,\n      protein_progress: 0,\n      fats_progress: 0,\n      carbs_progress: 0,\n      protein_goal: 0,\n      fats_goal: 0,\n      carbs_goal: 0\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getHistory();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          checkedLogin = _this$props.checkedLogin,\n          isLoggedIn = _this$props.isLoggedIn,\n          user = _this$props.user;\n\n      if (!checkedLogin) {\n        return null;\n      }\n\n      var pb_c = React.createElement(ProgressBar, {\n        now: this.state.caloric_progress,\n        label: \"\".concat(this.state.calories, \" calories\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n      var pb_p = React.createElement(ProgressBar, {\n        now: this.state.protein_progress,\n        label: \"\".concat(this.state.protein, \" g of protein\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n      var pb_ca = React.createElement(ProgressBar, {\n        now: this.state.carbs_progress,\n        label: \"\".concat(this.state.carbs, \" g of carbs\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n      var pb_f = React.createElement(ProgressBar, {\n        now: this.state.fats_progress,\n        label: \"\".concat(this.state.fats, \" g of fats\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n\n      if (this.state.caloric_progress >= 100) {\n        pb_c = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.caloric_progress,\n          label: \"\".concat(this.state.calories, \" calories\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.protein_progress >= 100) {\n        pb_p = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.protein_progress,\n          label: \"\".concat(this.state.protein, \"g of protein\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.carbs_progress >= 100) {\n        pb_ca = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.carbs_progress,\n          label: \"\".concat(this.state.carbs, \"g of carbs\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.fats_progress >= 100) {\n        pb_f = React.createElement(ProgressBar, {\n          variant: \"success\",\n          now: this.state.fats_progress,\n          label: \"\".concat(this.state.fats, \"g of fat\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"jumbotron jumbotron-fluid bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container secondary-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Welcome!\"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, user.email, \", get started by adding your meals for the day!\"), React.createElement(Link, {\n        to: \"/pick_food\",\n        className: \"btn btn-lg custom-button mr-2\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Add Food\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Today\"), React.createElement(BootstrapTable, {\n        bootstrap4: true,\n        hover: true,\n        striped: true,\n        keyField: \"food_id\",\n        data: this.state.history,\n        columns: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Progress\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Caloric goal: \", this.state.tdee, \" calories\"), pb_c, React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Protein goal: \", this.state.protein_goal, \" g of protein\"), pb_p, React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Carbs goal: \", this.state.carbs_goal, \" g of carbs\"), pb_ca, React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Fat goal: \", this.state.fats_goal, \" g of fat\"), pb_f))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/divbhasin/rails-app/fitness/app/javascript/components/Dashboard.jsx"],"names":["React","Component","Link","BootstrapTable","axios","ProgressBar","Card","activity_factors","multiplier","Dashboard","props","getHistory","get","then","data","console","log","setState","history","daily_history","caloric_progress","parseInt","progress","tdee","Math","round","calories","protein","fats","carbs","protein_progress","carbs_progress","fats_progress","protein_goal","fats_goal","carbs_goal","error","state","columns","dataField","hidden","text","isLoading","checkedLogin","isLoggedIn","user","pb_c","pb_p","pb_ca","pb_f","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport axios from 'axios';\nimport { ProgressBar, Card } from 'react-bootstrap';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nconst activity_factors = {\n    0: 1.2,\n    1: 1.375,\n    2: 1.55,\n    3: 1.725,\n    4: 1.9\n}\n\nconst multiplier = {\n    0: -0.2,\n    1: -0.1,\n    2: 0,\n    3: 0.1,\n    4: 0.2\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      columns: \n      [{\n        dataField: 'food_id',\n        hidden: 'true',\n        text: 'ID'\n      }, {\n        dataField: 'name',\n        text: 'Name'\n      }, {\n        dataField: 'servings',\n        text: 'Amount (in g)'\n      }, {\n        dataField: 'calories',\n        text: 'Calories'\n      }, {\n        dataField: 'protein',\n        text: 'Protein (in g)'\n      }, {\n        dataField: 'fats',\n        text: 'Fat (in g)'\n      }, {\n        dataField: 'carbs',\n        text: 'Carbs (in g)'\n      }],\n      history: [],\n      isLoading: true,\n      caloric_progress: 0,\n      tdee: 0,\n      calories: 0,\n      carbs: 0,\n      fats: 0,\n      protein: 0,\n      protein_progress: 0,\n      fats_progress: 0,\n      carbs_progress: 0,\n      protein_goal: 0,\n      fats_goal: 0,\n      carbs_goal: 0\n    }\n  }\n\n  getHistory = () => {\n    axios.get('/api/daily_analytics')\n      .then(({ data }) => {\n        console.log(data)\n        this.setState({\n          history: data.daily_history,\n          caloric_progress: parseInt(100 * data.progress[0].caloric_progress),\n          tdee: Math.round(data.tdee),\n          calories: parseInt(data.progress[0].calories),\n          protein: parseInt(data.progress[0].protein),\n          fats: parseInt(data.progress[0].fats),\n          carbs: parseInt(data.progress[0].carbs),\n          protein_progress: parseInt(100 * data.progress[0].protein_progress),\n          carbs_progress: parseInt(100 * data.progress[0].carbs_progress),\n          fats_progress: parseInt(100 * data.progress[0].fats_progress),\n          protein_goal: Math.round(data.protein_goal),\n          fats_goal: Math.round(data.fats_goal),\n          carbs_goal: Math.round(data.carbs_goal)\n        });\n      })\n      .catch(error => console.log('api errors:', error))\n  }\n\n  componentDidMount() {\n    this.getHistory()\n  }\n\n  render() {\n    const { checkedLogin, isLoggedIn, user } = this.props;\n    if (!checkedLogin) {\n      return null;\n    }\n\n    var pb_c = <ProgressBar now={this.state.caloric_progress} label={`${this.state.calories} calories`} />\n    var pb_p = <ProgressBar now={this.state.protein_progress} label={`${this.state.protein} g of protein`} />\n    var pb_ca = <ProgressBar now={this.state.carbs_progress} label={`${this.state.carbs} g of carbs`} />\n    var pb_f = <ProgressBar now={this.state.fats_progress} label={`${this.state.fats} g of fats`} />\n\n    if (this.state.caloric_progress >= 100) {\n      pb_c = <ProgressBar variant=\"success\" now={this.state.caloric_progress} label={`${this.state.calories} calories`} />\n    }\n    if (this.state.protein_progress >= 100) {\n      pb_p = <ProgressBar variant=\"success\" now={this.state.protein_progress} label={`${this.state.protein}g of protein`} />\n    }\n    if (this.state.carbs_progress >= 100) {\n      pb_ca = <ProgressBar variant=\"success\" now={this.state.carbs_progress} label={`${this.state.carbs}g of carbs`} />\n    }\n    if (this.state.fats_progress >= 100) {\n      pb_f = <ProgressBar variant=\"success\" now={this.state.fats_progress} label={`${this.state.fats}g of fat`} />\n    }\n\n    return (\n      <div className=\"jumbotron jumbotron-fluid bg-transparent\">\n        <div className=\"container secondary-color\">\n          <h1 className=\"display-4\">Welcome!</h1>\n          <p className=\"lead\">\n          {user.email}, get started by adding your meals for the day!\n          </p>\n          <Link to=\"/pick_food\" className=\"btn btn-lg custom-button mr-2\" role=\"button\">Add Food</Link>\n\n          <hr className=\"my-4\" />\n          <h3 className=\"display-4\">Today</h3>\n          <BootstrapTable \n            bootstrap4\n            hover\n            striped\n            keyField=\"food_id\" data={ this.state.history } columns={ this.state.columns } /> \n\n          <Card>\n            <Card.Header>Progress</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                Caloric goal: {this.state.tdee} calories \n              </Card.Text>\n              {pb_c}\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Protein goal: {this.state.protein_goal} g of protein \n              </Card.Text>\n              {pb_p}\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Carbs goal: {this.state.carbs_goal} g of carbs \n              </Card.Text>\n              {pb_ca}\n              <hr className=\"my-4\" />\n              <Card.Text>\n                Fat goal: {this.state.fats_goal} g of fat \n              </Card.Text>\n              {pb_f}\n\n            </Card.Body>\n          </Card>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}