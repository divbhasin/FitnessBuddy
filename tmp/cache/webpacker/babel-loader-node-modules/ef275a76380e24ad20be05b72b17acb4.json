{"ast":null,"code":"import * as d3 from 'd3';\n\nvar draw = function draw(props) {\n  var data = props.data;\n  var gender = ['Male', 'Female', 'Unknown'];\n  var count = new Array(3).fill(0);\n  data.forEach(function (d) {\n    var genderIndex = gender.indexOf(d.gender);\n    if (genderIndex + 1) count[genderIndex] += 1;\n  });\n  var dataset = [{\n    label: 'Protein',\n    count: count[0]\n  }, {\n    label: 'Carbs',\n    count: count[1]\n  }, {\n    label: 'Fats',\n    count: count[2]\n  }];\n  d3.select('.vis-piechart > *').remove();\n  var margin = {\n    top: 10,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  var width = props.width - margin.left - margin.right;\n  var height = props.height - margin.top - margin.bottom;\n  var svg = d3.select('.vis-piechart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + (width / 2 + margin.left) + ',' + (height / 2 + margin.top) + ')');\n  var radius = Math.min(width, height) / 2;\n  var color = d3.scaleOrdinal().range(['steelblue', 'LightBlue', 'LightSteelBlue']);\n  var arc = d3.arc().innerRadius(0).outerRadius(radius);\n  var pie = d3.pie().value(function (d) {\n    return d.count;\n  }).sort(null);\n  svg.selectAll('path').data(pie(dataset)).enter().append('path').attr('d', arc).attr('fill', function (d, i) {\n    return color(d.data.label);\n  });\n  var legendG = svg.selectAll(\".legend\").data(pie(dataset)).enter().append(\"g\").attr(\"transform\", function (d, i) {\n    return \"translate(\" + (i * 70 - 100) + \",\" + 110 + \")\";\n  }).attr(\"class\", \"legend\");\n  legendG.append(\"rect\").attr(\"width\", 10).attr(\"height\", 10).attr(\"fill\", function (d, i) {\n    return color(i);\n  });\n  legendG.append(\"text\").text(function (d) {\n    return d.data.label;\n  }).style(\"font-size\", 12).attr(\"y\", 10).attr(\"x\", 11);\n};\n\nexport default draw;","map":{"version":3,"sources":["/Users/divbhasin/rails-app/fitness/app/javascript/components/history/charts/PieChart/vis.js"],"names":["d3","draw","props","data","gender","count","Array","fill","forEach","d","genderIndex","indexOf","dataset","label","select","remove","margin","top","right","bottom","left","width","height","svg","append","attr","radius","Math","min","color","scaleOrdinal","range","arc","innerRadius","outerRadius","pie","value","sort","selectAll","enter","i","legendG","text","style"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nconst draw = (props) => {\n    const data = props.data;\n    const gender = ['Male', 'Female', 'Unknown'];\n    let count = new Array(3).fill(0);\n    data.forEach(d => {\n        let genderIndex = gender.indexOf(d.gender);\n        if (genderIndex + 1)\n            count[genderIndex] += 1;\n    });\n\n    const dataset = [\n        { label: 'Protein', count: count[0] },\n        { label: 'Carbs', count: count[1] },\n        { label: 'Fats', count: count[2] }\n    ]\n\n    d3.select('.vis-piechart > *').remove();\n    const margin = { top: 10, right: 20, bottom: 30, left: 40 };\n    const width = props.width - margin.left - margin.right;\n    const height = props.height - margin.top - margin.bottom;\n\n    let svg = d3.select('.vis-piechart')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + (width / 2 + margin.left) + ',' + (height / 2 + margin.top) + ')');\n\n    let radius = Math.min(width, height) / 2;\n\n    let color = d3.scaleOrdinal()\n        .range(['steelblue', 'LightBlue', 'LightSteelBlue']);\n\n    let arc = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius);\n\n    let pie = d3.pie()\n        .value(function (d) { return d.count; })\n        .sort(null);\n\n    svg.selectAll('path')\n        .data(pie(dataset))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', function (d, i) {\n            return color(d.data.label);\n        });\n    let legendG = svg.selectAll(\".legend\")\n        .data(pie(dataset))\n        .enter().append(\"g\")\n        .attr(\"transform\", function (d, i) {\n            return \"translate(\" + (i * 70 - 100) + \",\" + 110 + \")\"; \n        })\n        .attr(\"class\", \"legend\");\n\n    legendG.append(\"rect\")\n        .attr(\"width\", 10)\n        .attr(\"height\", 10)\n        .attr(\"fill\", function (d, i) {\n            return color(i);\n        });\n\n    legendG.append(\"text\") \n        .text(function (d) {\n            return d.data.label;\n        })\n        .style(\"font-size\", 12)\n        .attr(\"y\", 10)\n        .attr(\"x\", 11);\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}