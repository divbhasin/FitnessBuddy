{"ast":null,"code":"import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { customEvent, event, mouse, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, { nopropagation } from \"./noevent\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function input(x, e) {\n    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function input(y, e) {\n    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function input(xy) {\n    return xy;\n  },\n  output: function output(xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) {\n    if (!(node = node.parentNode)) return;\n  }\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function (group, selection) {\n    if (group.selection) {\n      group.on(\"start.brush\", function () {\n        emitter(this, arguments).beforestart().start();\n      }).on(\"interrupt.brush end.brush\", function () {\n        emitter(this, arguments).end();\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && empty(selection1) ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 && selection1 ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 == null || empty(selection1) ? null : selection1;\n        redraw.call(that);\n        emit.start().brush().end();\n      });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function beforestart() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function start() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function brush() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) {\n      if (event.changedTouches.length < event.touches.length) return noevent();\n    } else if (touchending) return;\n\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group.on(\"touchmove.brush\", moved, true).on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view).on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","map":{"version":3,"sources":["/Users/zameerbharwani/Desktop/cs348/project/rails-app/dashboard/node_modules/d3-brush/src/brush.js"],"names":["dispatch","dragDisable","dragEnable","interpolate","customEvent","event","mouse","select","interrupt","constant","BrushEvent","noevent","nopropagation","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","map","type","input","x","e","output","xy","Y","y","XY","cursors","overlay","selection","n","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","t","defaultFilter","button","defaultExtent","svg","ownerSVGElement","width","baseVal","value","height","local","node","__brush","parentNode","empty","extent","brushSelection","state","dim","brushX","brush","brushY","filter","listeners","handleSize","touchending","group","property","initialize","selectAll","data","enter","append","attr","merge","each","handle","d","exit","remove","redraw","style","on","started","move","emitter","arguments","beforestart","start","end","tween","that","emit","selection0","selection1","apply","i","call","args","length","Emitter","active","prototype","starting","touches","changedTouches","target","__data__","mode","metaKey","altKey","signX","signY","W","w0","w1","N","n0","n1","E","e0","e1","S","s0","s1","dx","dy","moving","shifting","shiftKey","lockX","lockY","point0","point","moved","ended","view","keydowned","keyupped","point1","Math","abs","max","min","clearTimeout","setTimeout","keyCode","_"],"mappings":"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","sourcesContent":["import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n"]},"metadata":{},"sourceType":"module"}