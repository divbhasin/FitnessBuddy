{"ast":null,"code":"import*as d3 from'd3';var draw=function draw(props){var data=props.data;var gender=['Protein','Carbs','Fats'];var count=new Array(3).fill(0);data.forEach(function(d){var genderIndex=gender.indexOf(d.gender);if(genderIndex+1)count[genderIndex]+=1;});var dataset=[{label:'Protein',count:count[0]},{label:'Carbs',count:count[1]},{label:'Fats',count:count[2]}];d3.select('.vis-piechart > *').remove();var margin={top:10,right:20,bottom:30,left:40};var width=props.width-margin.left-margin.right;var height=props.height-margin.top-margin.bottom;var svg=d3.select('.vis-piechart').append('svg').attr('width',width+margin.left+margin.right).attr('height',height+margin.top+margin.bottom).append('g').attr('transform','translate('+(width/2+margin.left)+','+(height/2+margin.top)+')');var radius=Math.min(width,height)/2;var color=d3.scaleOrdinal().range(['steelblue','LightBlue','LightSteelBlue']);var arc=d3.arc().innerRadius(0).outerRadius(radius);var pie=d3.pie().value(function(d){return d.count;}).sort(null);svg.selectAll('path').data(pie(dataset)).enter().append('path').attr('d',arc).attr('fill',function(d,i){return color(d.data.label);});var legendG=svg.selectAll(\".legend\").data(pie(dataset)).enter().append(\"g\").attr(\"transform\",function(d,i){return\"translate(\"+(i*70-100)+\",\"+110+\")\";}).attr(\"class\",\"legend\");legendG.append(\"rect\").attr(\"width\",10).attr(\"height\",10).attr(\"fill\",function(d,i){return color(i);});legendG.append(\"text\").text(function(d){return d.data.label;}).style(\"font-size\",12).attr(\"y\",10).attr(\"x\",11);};export default draw;","map":{"version":3,"sources":["/Users/zameerbharwani/Desktop/react-d3-dashboard/src/charts/PieChart/vis.js"],"names":["d3","draw","props","data","gender","count","Array","fill","forEach","d","genderIndex","indexOf","dataset","label","select","remove","margin","top","right","bottom","left","width","height","svg","append","attr","radius","Math","min","color","scaleOrdinal","range","arc","innerRadius","outerRadius","pie","value","sort","selectAll","enter","i","legendG","text","style"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nconst draw = (props) => {\n    const data = props.data;\n    const gender = ['Protein', 'Carbs', 'Fats'];\n    let count = new Array(3).fill(0);\n    data.forEach(d => {\n        let genderIndex = gender.indexOf(d.gender);\n        if (genderIndex + 1)\n            count[genderIndex] += 1;\n    });\n\n    const dataset = [\n        { label: 'Protein', count: count[0] },\n        { label: 'Carbs', count: count[1] },\n        { label: 'Fats', count: count[2] }\n    ]\n\n    d3.select('.vis-piechart > *').remove();\n    const margin = { top: 10, right: 20, bottom: 30, left: 40 };\n    const width = props.width - margin.left - margin.right;\n    const height = props.height - margin.top - margin.bottom;\n\n    let svg = d3.select('.vis-piechart')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + (width / 2 + margin.left) + ',' + (height / 2 + margin.top) + ')');\n\n    let radius = Math.min(width, height) / 2;\n\n    let color = d3.scaleOrdinal()\n        .range(['steelblue', 'LightBlue', 'LightSteelBlue']);\n\n    let arc = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius);\n\n    let pie = d3.pie()\n        .value(function (d) { return d.count; })\n        .sort(null);\n\n    svg.selectAll('path')\n        .data(pie(dataset))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', function (d, i) {\n            return color(d.data.label);\n        });\n    let legendG = svg.selectAll(\".legend\")\n        .data(pie(dataset))\n        .enter().append(\"g\")\n        .attr(\"transform\", function (d, i) {\n            return \"translate(\" + (i * 70 - 100) + \",\" + 110 + \")\"; \n        })\n        .attr(\"class\", \"legend\");\n\n    legendG.append(\"rect\")\n        .attr(\"width\", 10)\n        .attr(\"height\", 10)\n        .attr(\"fill\", function (d, i) {\n            return color(i);\n        });\n\n    legendG.append(\"text\") \n        .text(function (d) {\n            return d.data.label;\n        })\n        .style(\"font-size\", 12)\n        .attr(\"y\", 10)\n        .attr(\"x\", 11);\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}