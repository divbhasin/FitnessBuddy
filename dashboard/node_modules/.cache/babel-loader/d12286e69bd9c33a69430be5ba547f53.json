{"ast":null,"code":"var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","map":{"version":3,"sources":["/Users/zameerbharwani/Desktop/react-d3-dashboard/node_modules/d3-dispatch/src/dispatch.js"],"names":["noop","value","dispatch","i","n","arguments","length","_","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","prototype","constructor","on","typename","callback","T","get","set","copy","call","that","args","Array","apply","c","concat","push"],"mappings":"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","sourcesContent":["var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n"]},"metadata":{},"sourceType":"module"}