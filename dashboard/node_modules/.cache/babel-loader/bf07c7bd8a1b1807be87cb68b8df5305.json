{"ast":null,"code":"import { slice } from \"./array\";\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call = this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting = this._active = this._ended = this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function defer(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function abort() {\n    if (this._error == null) _abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function _await(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n\n    this._call = function (error, results) {\n      callback.apply(null, [error].concat(results));\n    };\n\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function awaitAll(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try {\n      start(q);\n    } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) _abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function (e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n\n    if (e != null) {\n      _abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);else maybeNotify(q);\n    }\n  };\n}\n\nfunction _abort(q, e) {\n  var i = q._tasks.length,\n      t;\n  q._error = e; // ignore active callbacks\n\n  q._data = undefined; // allow gc\n\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n\n      if (t.abort) {\n        try {\n          t.abort();\n        } catch (e) {\n          /* ignore */\n        }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n\n    q._call(q._error, d);\n  }\n}\n\nexport default function queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}","map":{"version":3,"sources":["/Users/zameerbharwani/Desktop/dash/node_modules/d3-queue/src/queue.js"],"names":["slice","noabort","Queue","size","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","prototype","queue","constructor","defer","callback","Error","t","call","arguments","push","poke","abort","await","error","results","apply","concat","maybeNotify","awaitAll","q","start","e","i","j","length","c","end","r","undefined","NaN","d","concurrency","Infinity"],"mappings":"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","sourcesContent":["import {slice} from \"./array\";\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nexport default function queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n"]},"metadata":{},"sourceType":"module"}