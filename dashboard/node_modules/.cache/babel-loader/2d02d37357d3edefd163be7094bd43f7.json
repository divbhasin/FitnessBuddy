{"ast":null,"code":"import enclose from \"./enclose\";\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.\n\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r; // Place the second circle.\n\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r; // Place the third circle.\n\n  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.\n\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a; // Attempt to place each remaining circle…\n\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next); // Success! Insert the new circle c between a and b.\n\n\n    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.\n\n    aa = score(a);\n\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n\n    b = a.next;\n  } // Compute the enclosing circle of the front chain.\n\n\n  a = [b._], c = b;\n\n  while ((c = c.next) !== b) {\n    a.push(c._);\n  }\n\n  c = enclose(a); // Translate the circles to put the enclosing circle around the origin.\n\n  for (i = 0; i < n; ++i) {\n    a = circles[i], a.x -= c.x, a.y -= c.y;\n  }\n\n  return c.r;\n}\nexport default function (circles) {\n  packEnclose(circles);\n  return circles;\n}","map":{"version":3,"sources":["/Users/zameerbharwani/Desktop/cs348/dashboard/node_modules/d3-hierarchy/src/pack/siblings.js"],"names":["enclose","place","a","b","c","ax","x","ay","y","da","r","db","dx","dy","dc","Math","sqrt","max","intersects","dr","score","node","_","next","ab","Node","circle","previous","packEnclose","circles","n","length","aa","ca","i","j","k","sj","sk","pack","push"],"mappings":"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","sourcesContent":["import enclose from \"./enclose\";\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n"]},"metadata":{},"sourceType":"module"}